from test_helper import check_samples

if __name__ == '__main__':
    check_samples(samples=[["#This is sample code challenge\nimport random\n\ndef generate():\n    num_tests \u003d 10\n    tests \u003d []\n    for test in range(num_tests):\n        a \u003d random.randrange(10)\n        b \u003d random.randrange(10)\n        test_case \u003d \"{} {}\".format(a, b)\n        tests.append(test_case)\n    return tests\n\ndef solve(dataset):\n    a, b \u003d dataset.split()\n    return str(int(a)+int(b))\n\ndef check(reply, clue):\n    return int(reply) \u003d\u003d int(clue)","5 num_tests\n6 tests\n8 a\n9 b\n10 test_case\n15 a b"],["#! /usr/bin/env python3\n#from fractions import gcd\n\ndef euclid(a, b):\n    while b:\n        a, b \u003d b, a % b\n    return a\n# def euclid(n, m):\n#     x \u003d gcd(20, 8)\n#     return x\n\nlst \u003d input().split()\nn \u003d int(lst[0])\nm \u003d int(lst[1])\nprint(euclid(n, m))","6 a b\n12 lst\n13 n\n14 m"],["a, b, c \u003d 12, 13, 15\nfor x in [1, 2, 3, 4]:\n    a, b \u003d x, x + 1\n    # yo \u003d x\n    # to, to \u003d 6, 5\n    c, d \u003d x + 2, x + 3  # that\u0027s ok","1 a b c\n3 a b\n6 c d"],["class HTTPDigestAuth:\n    \"\"\"Attaches HTTP Digest Authentication to the given Request object.\"\"\"\n    def __init__(self, username, password):\n        self.username \u003d username\n        self.password \u003d password\n        # Keep state in per-thread local storage\n        self._thread_local \u003d threading.local()","4 self.username\n5 self.password\n7 self._thread_local"]])